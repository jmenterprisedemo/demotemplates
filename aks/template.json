{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.9.1.41621",
      "templateHash": "4872251612294293473"
    }
  },
  "parameters": {
    "name": {
      "type": "string",
      "defaultValue": "jmaks"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "aksAdminUserName": {
      "type": "string",
      "defaultValue": "azureuser"
    },
    "kubernetesVersion": {
      "type": "string",
      "defaultValue": "1.22.6"
    },
    "aksAdminPassword": {
      "type": "secureString"
    },
    "logAnalyticsSku": {
      "type": "string",
      "defaultValue": "PerNode",
      "metadata": {
        "description": "Specifies the service tier of the workspace: Free, Standalone, PerNode, Per-GB."
      },
      "allowedValues": [
        "Free",
        "Standalone",
        "PerNode",
        "PerGB2018"
      ]
    }
  },
  "variables": {
    "readerRoleDefinitionName": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
    "contributorRoleDefinitionName": "b24988ac-6180-42a0-ab88-20f7382dd24c",
    "acrPullRoleDefinitionName": "7f951dda-4ed3-4680-a7ca-43fe172d538d",
    "uniqueName": "[substring(format('{0}{1}', parameters('name'), uniqueString(resourceGroup().id)), 0, min(19, add(length(parameters('name')), 13)))]",
    "kv_name": "[format('{0}kv', variables('uniqueName'))]",
    "storageAccount_name": "[format('{0}stg', variables('uniqueName'))]",
    "registry_name": "[format('{0}acr', variables('uniqueName'))]",
    "vnet_name": "[format('{0}vnet', variables('uniqueName'))]",
    "vnet_default_nsg_name": "[format('{0}vnnsg', variables('uniqueName'))]",
    "pip_name": "[format('{0}pip', variables('uniqueName'))]",
    "log_analytics_workspace_name": "[format('{0}log', variables('uniqueName'))]",
    "managedClusters_name": "[variables('uniqueName')]",
    "nsg_name": "[format('{0}nsg', variables('uniqueName'))]",
    "userAssignedIdentity_name": "[format('{0}mi', variables('uniqueName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2022-02-01-preview",
      "name": "[variables('registry_name')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Basic"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "adminUserEnabled": true,
        "publicNetworkAccess": "Enabled",
        "networkRuleBypassOptions": "AzureServices"
      }
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2018-11-30",
      "name": "[variables('userAssignedIdentity_name')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2021-11-01-preview",
      "name": "[variables('kv_name')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[subscription().tenantId]",
        "enabledForDeployment": false,
        "publicNetworkAccess": "Enabled",
        "accessPolicies": [
          {
            "tenantId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentity_name'))).tenantId]",
            "objectId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentity_name'))).principalId]",
            "permissions": {
              "secrets": [
                "get",
                "list"
              ],
              "certificates": [
                "get"
              ]
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentity_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-11-01",
      "name": "[variables('nsg_name')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-11-01",
      "name": "[variables('vnet_default_nsg_name')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": []
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-11-01",
      "name": "[variables('vnet_name')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/8"
          ]
        },
        "dhcpOptions": {
          "dnsServers": []
        },
        "subnets": [
          {
            "name": "default",
            "properties": {
              "addressPrefix": "10.240.0.0/16",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vnet_default_nsg_name'))]"
              },
              "serviceEndpoints": [],
              "delegations": [],
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          }
        ],
        "virtualNetworkPeerings": [],
        "enableDdosProtection": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vnet_default_nsg_name'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-09-01",
      "name": "[variables('storageAccount_name')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "minimumTlsVersion": "TLS1_0",
        "allowBlobPublicAccess": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2022-01-01",
      "name": "[variables('pip_name')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2021-12-01-preview",
      "name": "[variables('log_analytics_workspace_name')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "[parameters('logAnalyticsSku')]"
        },
        "retentionInDays": 30
      }
    },
    {
      "type": "Microsoft.ContainerService/managedClusters",
      "apiVersion": "2022-05-02-preview",
      "name": "[variables('managedClusters_name')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Basic",
        "tier": "Free"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "kubernetesVersion": "[parameters('kubernetesVersion')]",
        "dnsPrefix": "[format('{0}-dns', variables('managedClusters_name'))]",
        "agentPoolProfiles": [
          {
            "name": "agentpool",
            "count": 1,
            "vmSize": "Standard_B4ms",
            "osDiskSizeGB": 128,
            "osDiskType": "Managed",
            "kubeletDiskType": "OS",
            "vnetSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet_name'), 'default')]",
            "maxPods": 110,
            "type": "VirtualMachineScaleSets",
            "maxCount": 5,
            "minCount": 1,
            "enableAutoScaling": true,
            "powerState": {
              "code": "Running"
            },
            "orchestratorVersion": "[parameters('kubernetesVersion')]",
            "enableNodePublicIP": false,
            "enableCustomCATrust": false,
            "mode": "System",
            "osType": "Linux",
            "osSKU": "Ubuntu",
            "enableFIPS": false
          }
        ],
        "windowsProfile": {
          "adminUsername": "[parameters('aksAdminUserName')]",
          "adminPassword": "[parameters('aksAdminPassword')]",
          "enableCSIProxy": true
        },
        "servicePrincipalProfile": {
          "clientId": "msi"
        },
        "addonProfiles": {
          "azurepolicy": {
            "enabled": true
          },
          "omsAgent": {
            "enabled": true,
            "config": {
              "logAnalyticsWorkspaceResourceID": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('log_analytics_workspace_name'))]"
            }
          }
        },
        "enableRBAC": true,
        "networkProfile": {
          "networkPlugin": "azure",
          "loadBalancerSku": "Standard",
          "outboundType": "loadBalancer"
        },
        "autoScalerProfile": {
          "balance-similar-node-groups": "false",
          "expander": "random",
          "max-empty-bulk-delete": "10",
          "max-graceful-termination-sec": "600",
          "max-node-provision-time": "15m",
          "max-total-unready-percentage": "45",
          "new-pod-scale-up-delay": "0s",
          "ok-total-unready-count": "3",
          "scale-down-delay-after-add": "10m",
          "scale-down-delay-after-delete": "10s",
          "scale-down-delay-after-failure": "3m",
          "scale-down-unneeded-time": "10m",
          "scale-down-unready-time": "20m",
          "scale-down-utilization-threshold": "0.5",
          "scan-interval": "10s",
          "skip-nodes-with-local-storage": "false",
          "skip-nodes-with-system-pods": "true"
        },
        "securityProfile": {
          "defender": {
            "logAnalyticsWorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('log_analytics_workspace_name'))]",
            "securityMonitoring": {
              "enabled": true
            }
          }
        },
        "storageProfile": {
          "diskCSIDriver": {
            "enabled": true,
            "version": "v1"
          },
          "fileCSIDriver": {
            "enabled": true
          },
          "snapshotController": {
            "enabled": true
          }
        },
        "oidcIssuerProfile": {
          "enabled": false
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('log_analytics_workspace_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet_name'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(variables('registry_name'), variables('acrPullRoleDefinitionName'), resourceGroup().id)]",
      "properties": {
        "principalId": "[reference(resourceId('Microsoft.ContainerService/managedClusters', variables('managedClusters_name'))).identityProfile.kubeletIdentity.objectId]",
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('acrPullRoleDefinitionName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ContainerService/managedClusters', variables('managedClusters_name'))]"
      ]
    }
  ]
}